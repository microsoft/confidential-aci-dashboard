name: AKS Deployment

permissions:
   id-token: write
   contents: read

on:
  workflow_dispatch:  # Trigger manually
    Inputs:
      Region:
        description: 'Region to be deployed to'
        required: false
        default: northeurope

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      RESOURCE_GROUP: mchamarthy-aks-ci-northeurope
      AKS_CLUSTER_NAME: aks-ci-northeurope

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Fetch region
      env:
        Region: ${{ github.event.inputs.REGION }}
      run: echo "Region being deployed to is ${{github.event.inputs.Region}}"

    - name: Log into Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.SUBSCRIPTION }}

    - name: Install Git
      run: sudo apt-get install -y git

    - name: Install Helm
      run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Install Azure CLI
      run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Clone VN2 Repo
      run: |
        git clone https://github.com/microsoft/virtualnodesOnAzureContainerInstances.git
        ls virtualnodesOnAzureContainerInstances/    

    - name: Deploy to AKS using bash script
      run: |
        # Make the script executable
        chmod +x workloads/vn2/deploy-cleanup-vn2.sh
        
        # Run the bash script and ensure the workflow fails if the script fails
        ./workloads/vn2/deploy-cleanup-vn2.sh $RESOURCE_GROUP $AKS_CLUSTER_NAME
      shell: bash
      continue-on-error: false  # Ensures the workflow fails if the script exits with a non-zero status

