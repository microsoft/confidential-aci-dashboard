name: Workload - Many Layers

permissions:
  id-token: write
  contents: read

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      id:
        type: string
        description: ID of the run
      location:
        type: string
        description: Where to deploy to
        required: true
      cpu:
        type: number
        description: The number of CPU cores in container
        default: 1
      memory_in_gb:
        type: number
        description: The memory in container in Gb
        default: 4
      cleanup:
        type: boolean
        description: Whether to cleanup the container group after testing
        default: true
      allow_all:
        type: boolean
        description: Whether to use the allow all policy
        default: false
  workflow_call:
    inputs:
      id:
        type: string
        description: ID of the run
      location:
        type: string
        description: Where to deploy to
        required: true
      cpu:
        type: number
        description: The number of CPU cores in container
        default: 1
      memory_in_gb:
        type: number
        description: The memory in container in Gb
        default: 4
      cleanup:
        type: boolean
        description: Whether to cleanup the container group after testing
        default: true
      allow_all:
        type: boolean
        description: Whether to use the allow all policy
        default: false

env:
  DEPLOYMENT_NAME: ${{ inputs.id || 'many_layers' }}-${{ inputs.location }}-${{ github.run_id }}-${{ github.run_number }}
  SUBSCRIPTION: ${{ vars.SUBSCRIPTION }}
  RESOURCE_GROUP: c-aci-dashboard
  REGISTRY: cacidashboard.azurecr.io
  MANAGED_IDENTITY: cacidashboard
  LOCATION: ${{ inputs.location || 'westeurope' }}
  CPU: ${{ inputs.cpu || 1 }}
  MEMORY_IN_GB: ${{ inputs.memory_in_gb || 4 }}
  CLEANUP: ${{ inputs.cleanup || true }}
  ALLOW_ALL: ${{ inputs.allow_all || false }}

jobs:
  many_layers:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Log into Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.SUBSCRIPTION }}

      - name: Install c_aci_testing package
        env:
          GH_TOKEN: ${{ github.token }}
        run: ./scripts/install-c-aci-testing.sh

      - name: Setup Docker
        run: sudo usermod -aG docker $USER

      - name: Pull Image
        run: c-aci-testing images pull workloads/many_layers

      - name: Set Parameters
        run: |
          c-aci-testing aci param_set workloads/many_layers --parameter cpu=$CPU
          c-aci-testing aci param_set workloads/many_layers --parameter memoryInGb=$MEMORY_IN_GB

      - name: Generate Security Policy
        run: |
          if [ "$ALLOW_ALL" == true ]; then
            c-aci-testing policies gen workloads/many_layers --deployment-name $DEPLOYMENT_NAME --allow-all
          else
            c-aci-testing policies gen workloads/many_layers --deployment-name $DEPLOYMENT_NAME
          fi
          cat workloads/many_layers/policy_many_layers.rego

      - name: Deploy Container Group
        run: c-aci-testing aci deploy workloads/many_layers --deployment-name $DEPLOYMENT_NAME

      - name: Monitor Container Group
        run: c-aci-testing aci monitor --deployment-name $DEPLOYMENT_NAME --follow

      - name: Remove Container Group
        run: |
          if [ "$CLEANUP" = true ]; then
            c-aci-testing aci remove --deployment-name $DEPLOYMENT_NAME
          fi