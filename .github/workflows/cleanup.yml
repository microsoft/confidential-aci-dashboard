name: Cleanup

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  cleanup-container-groups:
    name: Cleanup Container Groups
    runs-on: ubuntu-latest
    steps:
      - name: Log into Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.SUBSCRIPTION }}

      - name: Cleanup Container Groups
        run: |
          RUNNING_CONTAINERS=$(az container list \
          --resource-group c-aci-dashboard \
          --query "[?!starts_with(name, 'uptime-')]")

          for container in $(echo $RUNNING_CONTAINERS | jq -r '.[].id'); do
              echo "Deleting container group: ${container}"
              az resource delete --ids ${container}
          done


      - name: Cleanup VMs
        run: |
          RUNNING_VMS=$(az vm list --resource-group c-aci-dashboard --query '[].id' -o tsv)
          for vm in $RUNNING_VMS; do
              echo "Deleting VM: ${vm}"
              az vm delete --ids ${vm} --yes --force-deletion yes
              vm_deployment_name=`echo $vm | grep -oP '(?<=/virtualMachines/).*(?=-vm)'`
              echo "Deleting vnet and nsg: ${vm_deployment_name}-..."
              az resource delete --resource-group c-aci-dashboard -n ${vm_deployment_name}-vnet --resource-type Microsoft.Network/virtualNetworks
              az resource delete --resource-group c-aci-dashboard -n ${vm_deployment_name}-nsg --resource-type Microsoft.Network/networkSecurityGroups
          done


      - name: Cleanup pushed images
        run: |
          az acr run --registry cacidashboard --cmd 'acr purge --filter "^heavy_io/.+:.*" --ago 0d --keep 1 --untagged' /dev/null
